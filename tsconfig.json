{
  "compilerOptions": {
    "target": "es5", // Specifies the ECMAScript target version (ES5). This determines the JavaScript version the TypeScript code will compile down to.
    "lib": [
      "dom", // Includes standard DOM API declarations.
      "dom.iterable", // Includes declarations for DOM iterable objects like NodeList and HTMLCollection.
      "esnext" // Includes declarations for the latest ECMAScript features.
    ],
    "allowJs": true, // Allows JavaScript files to be compiled.
    "skipLibCheck": true, // Skips type checking of declaration files (d.ts) to speed up the compilation.
    "strict": true, // Enables all strict type-checking options.
    "forceConsistentCasingInFileNames": true, // Ensures that file names are consistently cased.
    "noEmit": true, // Prevents the compiler from writing output files.
    "esModuleInterop": true, // Enables interoperability between CommonJS and ES Modules, allowing you to use `import` syntax with CommonJS modules.
    "module": "esnext", // Specifies the module code generation: using the latest ES module standard.
    "moduleResolution": "node", // Uses Node's module resolution strategy.
    "resolveJsonModule": true, // Allows importing JSON files.
    "isolatedModules": true, // Ensures that each file is treated as a separate module. Necessary for compatibility with Babel.
    "jsx": "preserve", // Keeps JSX as is. The Next.js compiler will handle transforming JSX.
    "incremental": true // Enables incremental compilation, which can improve build times.
  },
  "include": [
    "next-env.d.ts", // Includes the Next.js environment type definitions.
    "**/*.ts", // Includes all TypeScript files.
    "**/*.tsx" // Includes all TypeScript files with JSX.
  ],
  "exclude": [
    "node_modules" // Excludes the `node_modules` directory from the compilation.
  ]
}
